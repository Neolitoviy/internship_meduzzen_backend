name: FastAPI Deployment

on:
  push:
    branches:
      - be_20_add_github_actions

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      TAG: ${{ github.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install poetry
          poetry config virtualenvs.create false
          poetry install

      - name: Build Docker image and set Docker tag with TAG
        run: |
          echo "Generated Docker tag: $TAG"
          docker build -t "${{ secrets.ECR_REPOSITORY_URI }}" .
          docker tag "${{ secrets.ECR_REPOSITORY_URI }}" "${{ secrets.ECR_REPOSITORY_URI }}:${TAG}"

      - name: Debug Environment Variables
        run: |
          echo "ECR_REPOSITORY_URI: ${{ secrets.ECR_REPOSITORY_URI }}"
          echo "Generated Docker tag: $TAG"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Push Docker image to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URI }}
          docker push "${{ secrets.ECR_REPOSITORY_URI }}:${TAG}"

      - name: SSH into EC2 instance and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: |
            TAG=${TAG}
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION=${{ secrets.AWS_REGION }}
          script: |
            echo "AWS CLI version: \$(aws --version)"
            echo "Docker version: \$(docker --version)"
            
            echo "Stop the current running container if exist..."
            docker stop container_name || true
            
            echo "Remove the previous container..."
            docker rm container_name || true
            
            echo "AWS credentials set...."
            export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            export AWS_REGION=${AWS_REGION}
            
            echo "Logging in to ECR...."
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URI }}
            echo "Logged in successful..."
            
            echo "Pulling image from ECR..."
            docker pull "${{ secrets.ECR_REPOSITORY_URI }}:${TAG}"
            echo "Docker pull completed..."
            
            echo "Running the container..."
            docker run -d \
              --name container_name \
              -p 80:8000 "${{ secrets.ECR_REPOSITORY_URI }}:${TAG}"
