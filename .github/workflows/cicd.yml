name: CI/CD Pipeline

on:
  push:
    branches:
      - be_20_add_github_actions

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}  # AWS region
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_URI }}  # Amazon ECR repository URI
  IMAGE_TAG: latest  # Docker image tag

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Rename .env.sample to .env
        run: mv .env.sample .env

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: docker build -t ${{ secrets.ECR_REPOSITORY_URI }}:${{ env.IMAGE_TAG }} .

      - name: Push Docker image to ECR
        run: docker push ${{ secrets.ECR_REPOSITORY_URI }}:${{ env.IMAGE_TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: SSH into EC2 instance and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: |
            TAG=${{ env.IMAGE_TAG }}
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION=${{ secrets.AWS_REGION }}
            ECR_REPOSITORY=${{ secrets.ECR_REPOSITORY_URI }}
          script: |
            echo "AWS CLI version: $(aws --version)"
            echo "Docker version: $(docker --version)"
            
            echo "List running Docker containers..."
            sudo docker ps -a

            echo "Stop the current running container if exist..."
            sudo docker stop myappcontainer || true

            echo "Remove the previous container..."
            sudo docker rm myappcontainer || true

            echo "List Docker containers after removal..."
            sudo docker ps -a

            echo "AWS credentials set...."
            export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            export AWS_REGION=${AWS_REGION}

            echo "Logging in to ECR...."
            aws ecr get-login-password --region $AWS_REGION | sudo docker login --username AWS --password-stdin $ECR_REPOSITORY
            echo "Logged in successful..."

            echo "Pulling image from ECR..."
            sudo docker pull "${ECR_REPOSITORY}:${TAG}"
            echo "Docker pull completed..."

            echo "Running the container..."
            sudo docker run -d \
              --name myappcontainer \
              -p 80:8000 "${ECR_REPOSITORY}:${TAG}"

            echo "List running Docker containers after deployment..."
            sudo docker ps -a
