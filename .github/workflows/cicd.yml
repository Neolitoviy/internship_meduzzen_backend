name: CI/CD Pipeline

on:
  push:
    branches:
      - be_20_add_github_actions

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Rename .env.sample to .env
        run: mv .env.sample .env

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: docker build -t ${{ secrets.ECR_REPOSITORY_URI }}:latest .

      - name: Push Docker image to ECR
        run: docker push ${{ secrets.ECR_REPOSITORY_URI }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy docker image to EC2
        uses: appleboy/ssh-action@master
        env:
          REGISTRY: ${{ secrets.ECR_REPOSITORY_URI }}
          REPOSITORY: myapprepository
          IMAGE_TAG: latest
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo yum update -y
            sudo yum install docker -y
            sudo systemctl start docker
            sudo yum install aws-cli -y
            echo $AWS_ACCESS_KEY_ID
            echo $AWS_SECRET_ACCESS_KEY
            echo $AWS_DEFAULT_REGION
            docker login -u AWS -p $(aws ecr get-login-password --region $AWS_DEFAULT_REGION --profile default) $REGISTRY
            sudo docker pull $REGISTRY:$IMAGE_TAG
            sudo docker stop myappcontainer || true
            sudo docker rm myappcontainer || true
            sudo docker run -d --name myappcontainer -p 80:8000 $REGISTRY:$IMAGE_TAG
